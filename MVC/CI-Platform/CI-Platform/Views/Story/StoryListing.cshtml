@{
    Layout = "Home_Layout";
}
    @using CI_Platform.Models.ViewModels

    @model CI_Platform.Models.ViewModels.StoryListingViewModel
<div class="filter-bar">
    <nav class="navbar navbar-expand-md navbar-toggleable-md bg-white navbar-light bg-white border-bottom box-shadow p-0">
        <div class="container-fluid my-0">
            <div class="navbar-brand search-form">

                <input class="form-control search-input mr-2" type="search" id="search" placeholder="Search Mission..." aria-label="Search" />

            </div>

            <div class="navbar-collapsee collapse w-50 d-md-inline-flex ">
                @*<ul class="navbar-nav filters flex-grow-1 justify-content-around*@
                <div class="row gx-0 w-100 filters">
                    <div class="nav-item col-md-3 filter-item dropdown d-flex align-items-center justify-content-center">
                        <a class="nav-link dropdown-toggle text-dark header-text" data-bs-toggle="dropdown" aria-expanded="false" id="countriesMenu">
                            <span>Country</span>
                            <img src="~/images/drop-down.png" class="mx-2 dropdown-img" alt="">
                        </a>
                        <ul class="dropdown-menu dropdown-menu-sm-end" id="countries">
                            @foreach (var item in Model.Countries)
                            {
                                <li><a class="dropdown-item" href="#"><input type="checkbox" class="me-2" id="@item.Name.Replace(" ",String.Empty)" name="@item.Name" value="@item.CountryId"><label class="pe-2" for="@item.Name.Replace(" ",String.Empty)">@item.Name </label></a></li>
                            }
                            @*           <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>*@
                        </ul>
                    </div>
                    <li class="nav-item col-md-3 filter-item dropdown d-flex align-items-center justify-content-center" id="cityfinal">
                        <a class="nav-link dropdown-toggle text-dark header-text" data-bs-toggle="dropdown" aria-expanded="false" id="citiesMenu">
                            <span>City</span>
                            <img src="~/images/drop-down.png" class="mx-2 dropdown-img" alt="">
                        </a>
                        <ul class="dropdown-menu dropdown-menu-sm-end" id="cities">
                            @foreach (var item in Model.Cities)
                            {
                            <li>
                                    <a class="dropdown-item" href="#"><input type="checkbox" class="me-2" id="@item.Name.Replace(" ",String.Empty)" name="@item.Name" value="@item.CityId"><label class="pe-2" for="@item.Name.Replace(" ",String.Empty)">@item.Name </label></a>
                                </li>
                            }
                            @*<li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>*@
                        </ul>
                    </li>
                    <li class="nav-item col-md-3 filter-item dropdown d-flex align-items-center justify-content-center">
                        <a class="nav-link dropdown-toggle text-dark header-text" data-bs-toggle="dropdown" aria-expanded="false">
                            <span>Theme</span>
                            <img src="~/images/drop-down.png" class="mx-2 dropdown-img" alt="">
                        </a>
                        <ul class="dropdown-menu dropdown-menu-sm-end" id="themes">
                            @foreach (var item in Model.MissionThemes)
                            {
                                <li><a class="dropdown-item" href="#"><input type="checkbox" class="me-2" id="@item.Title.Replace(" ",String.Empty)" name="@item.Title" value="@item.MissionThemeId"><label id="lb" for=@item.Title>@item.Title </label></a></li>
                            }
                            @*<li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>*@
                        </ul>
                    </li>
                    <li class="nav-item col-md-3 filter-item dropdown d-flex align-items-center justify-content-center">
                        <a class="nav-link dropdown-toggle text-dark header-text" data-bs-toggle="dropdown" aria-expanded="false">
                            <span>Skills</span>
                            <img src="~/images/drop-down.png" class="mx-2 dropdown-img" alt="">
                        </a>
                        <ul class="dropdown-menu dropdown-menu-sm-end" id="skills">
                            @foreach (var item in Model.Skills)
                            {
                                <li><a class="dropdown-item" href="#"><input type="checkbox" class="me-2" id="@item.SkillName.Replace(" ",String.Empty)" name="@item.SkillName" value="@item.SkillId"><label for=@item.SkillName.Trim()>@item.SkillName </label></a></li>
                            }
                            @*<li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>*@
                        </ul>
                    </li>
                    <div class="clearAllFilters filter-item align-content-center">
                        <a class="field-text" style="text-decoration:none;">Clear All Filters</a>
                    </div>

                    @* <li class="nav-item filter-item clearAllFilters d-flex align-items-center justify-content-center" id="clearAllFilters">
                    <a class="nav-link text-dark header-text" data-bs-toggle="dropdown" aria-expanded="false">
                    Clear All Filters
                    </a>
                    </li>*@
                </div>
                @*</ul>*@
            </div>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapsee" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

        </div>
    </nav>
</div>


<div class="story-listing-img  mb-4">
    <img class="story-img-top" src="~/images/Grow-Trees-On-the-path-to-environment-sustainability-login.png" alt="Card image cap">

    <div class="story-img-bg">

    </div>

    <div class="story-img-text text-center">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.</p>
        <div class="">
            <a type="button" asp-action="ShareYourStory" asp-controller="Story" class="transperentBtn py-2 text-decoration-none px-4" id="">Share Your Story <i class="bi bi-arrow-right"></i></a>
        </div>
    </div>
</div>


<div class="container-fluid grid-container px-3 px-sm-5" id="storyContainer">
    @Html.Partial("StoryCards")

</div>
@{
    int pageCount;
    if(Model.StoryCount % 3 == 0)
    {
        pageCount = Model.StoryCount / 3;
    }
    else
    {
        pageCount = Model.StoryCount / 3 +1;

    }
}
<div id="paginationContainer">
    <div class="pagination d-flex justify-content-center mt-5 mb-5" id="pagination">
        <a id="fr"><img src="~/images/previous.png" alt="Previous" /></a>
        <a id="pre"><img src="~/images/left.png" alt="Previous" /></a>
        @for(var i= 1; i <= pageCount; i++){
            @if (i == 1)
            {
                <a  class="active pt-1" id="first">@i</a>
            }else{
                <a class="pt-1">@i</a>
            }
        }

        <a id="next"><img src="~/images/right-arrow1.png" alt="Previous" /></a>
        <a id="last"><img src="~/images/next.png" alt="Previous" /></a>
    </div>
</div>

<script>
    function applyFilter(pageIndex){
        var selectedCountryID = $('#countries li a input[type=checkbox]:checked').map(function () {return this.value;}).get().join();
        
        var selectedCityID = $('#cities li a input[type=checkbox]:checked').map(function () {return this.value;}).get().join();

        var selectedThemeID = $('#themes li a input[type=checkbox]:checked').map(function () {return this.value;}).get().join();

        var selectedSkillID = $('#skills li a input[type=checkbox]:checked').map(function () {return this.value;}).get().join();

        var searchText = $('#search').map(function(){return this.value;}).get().join();

        console.log(searchText);

        if(selectedCityID == "") {
            selectedCityID = $('#cities li a input[type=checkbox]').map(function () {
                return this.value;
            }).get().join();
            
        }
        
        if(selectedCountryID == ""){        
            selectedCountryID = $('#countries li a input[type=checkbox]').map(function () {
                return this.value;    
            }).get().join();
        }

        if(selectedThemeID == ""){
            selectedThemeID = $('#themes li a input[type=checkbox]').map(function () {
                return this.value;
            }).get().join();
        }

        if(selectedSkillID == ""){
            selectedSkillID = $('#themes li a input[type=checkbox]').map(function () {
                return this.value;
            }).get().join();
        }
        console.log(selectedCountryID);
        console.log(selectedCityID);
        console.log(selectedThemeID);
        console.log(selectedSkillID);
        


        $.ajax({
            url: '/Story/GetStoryCards',
            type: 'POST',
            data: {CountryIDs: selectedCountryID,
            CityIDs: selectedCityID,
            ThemeIDs: selectedThemeID,
            SkillIds: selectedSkillID,
            SearchText: searchText,
            PageIndex: pageIndex},
            dataType: 'html',
            success:function (viewModel) {
                //console.log(viewModel);
                
                $('#storyContainer').html(viewModel);
                
                
            }
   
        });
    
        
    }
    $('#countries li a input[type=checkbox]').click(function (e) {
            var CountryId = $(this).val();
            console.log(CountryId);
            //console.log(CountryId.substring(CountryId.indexOf("-")+1));
            ////console.log(CountryId);
            //var CountryId = parseInt(CountryId);
            if (e.currentTarget.checked) {

                $.ajax({
                    url: '/Home/GetCityByCountry',
                    type: 'GET',
                    data: { CountryId: CountryId },
                    dataType: 'json',
                    success:function (data) {
                        var cities = $('#cities');
                        if($('#countries').find('li a input[type=checkbox]:checked').length == 1){
                            cities.empty();
                        }
                        //cities.empty();   
                        var items = "";
                        $.each(data, function (i, item) {
                            var li = document.createElement('li');

                            var anc = document.createElement('a');
                            anc.classList.add("dropdown-item");

                            var inp = document.createElement('input');
                            inp.type = "checkbox";
                            inp.id = item.name.replaceAll(' ', '');
                            inp.value = item.cityId;
                            inp.name = item.name
                            inp.classList.add("me-2");


                            var lable = document.createElement('lable');
                            lable.classList.add("form-check-label");
                            lable.setAttribute("for", item.name.replaceAll(' ', ''));
                            lable.innerHTML = item.name;

                            anc.appendChild(inp);
                            $(inp).after($(lable));
                            li.appendChild(anc);

                            cities.append(li);
                            //items += `<li><a class="dropdown-item"><input type="checkbox" name=`+ item.name.replaceAll(' ','') +` class="me-2" id=` + item.name.replaceAll(' ', '') + ` value=` + item.cityId + `><label class="form-check-label" for=`+ item.name.replaceAll(' ', '') +` >` + item.name + `</label></li>`
                            
                        });
                        
                        
                        applyFilter("1");
                        //moveToFirstPage();
                        //changeCount();

                    }
                });
                
            } else {
                $.ajax({
                    url: '/Home/GetCityByCountry',
                    type: 'GET',
                    data: { CountryId: CountryId },
                    dataType: 'json',
                    success: function (data) {
                        var cities = $('#cities');

                        var items = "";
                        $.each(data, function (i, item) {
                            var id = "#" + item.name.replaceAll(' ', '');
                            console.log(id);
                            $(id).parent().parent().remove();
                        });
                        if($('#cities li').map(function(){return this}).get().join().length == 0){
                            console.log('getall');
                            getAllCities();
                            //$.when(getAllCities()).then(applyFilter());
                            //changeCount();
                            applyFilter();
                            
                        }else{
                            applyFilter("1");
                            //moveToFirstPage();
                            //changeCount();

                        }
                            
                    }
                });
            }
            
            
        });
        $(document).ready(function(){
            $.ajax({
                url: '/Story/GetStoryCards',
                type: 'POST',
                data: {CountryIDs: "", CityIDs: "",ThemeIDs: "",SkillIds: "",SearchText:"",PageIndex:"1"},
                dataType: 'html',
                success:function (viewModel) {
                    console.log("All");
                    $('#storyContainer').html(viewModel);
                }
            });
            $('#cityfinal').change(function (e){
                //console.log('ccc');
                applyFilter("1");
                
            });

            $('#themes li a input[type=checkbox]').click(function (e){
                //console.log("thc");
                applyFilter("1");
                
            });

            $('#skills li a input[type=checkbox]').click(function (e){
                applyFilter("1");
                
            });
            $('#sortBy').change(function(){
                applyFilter("1");
                
                //console.log($(this).val());
            });

            $('#search').keyup(function(){
                applyFilter("1");
                
            });
            $("#paginationContainer div a").click( (e) =>{
                console.log("ssss");
                console.log(e.target);
                if(e.target.id == "fr"){
                    console.log("x");
                    moveToFirstPage();
                    applyFilter("1");

                }else if(e.target.id == "last"){
                    //console.log(e.target.previousElementSibling.previousElementSibling.innerHTML);
                    applyFilter(e.target.previousElementSibling.previousElementSibling.innerHTML);
                        //applyFilter();
                     $('#paginationContainer div a').each(function(){
                        var x = $(this);
                        if(x.hasClass('active')){
                            x.removeClass('active');
                        }
                    });
                    e.target.previousElementSibling.previousElementSibling.classList.add("active");
                
                }else if(e.target.id == "next"){
                
                    var y;
                    var targetText;
                    $('#paginationContainer div a').each(function(){
                        var x = $(this);
                    
                        if(x.hasClass('active')){
                        
                            if(x.text() == e.target.previousElementSibling.innerHTML){
                                y = x;
                                targetText = x.text();
                   
                            }else{
                                targetText = x.next().text();
                        
                                y = x.next();
                            }
                        
                            x.removeClass('active');
                        }
                    });
                    y.addClass('active');
                    //console.log(y);
                    console.log(targetText);
                    applyFilter(targetText);

                }else if(e.target.id == "pre"){
                    var y;
                    var targetText;
                    $('#paginationContainer div a').each(function(){
                        var x = $(this);
                        if(x.hasClass('active')){
                            if(x.text() == "1"){
                                y = x;
                                targetText = x.text();
                            }else{
                                y = x.prev();
                                targetText = x.prev().text();
                            }
                        
                            x.removeClass('active');
                        
                        
                        }
                    });
                    applyFilter(targetText);
                    y.addClass('active');
                }else{
                    $('#paginationContainer div a').each(function(){
                        //console.log(this.classList);
                        var x = $(this);
                        if(x.hasClass('active')){
                            x.removeClass('active');
                        }
                    });
                    e.target.classList.add('active');
                    console.log(e.target.innerHTML);
                    applyFilter(e.target.innerHTML);
                }
            });
        });
    function moveToFirstPage(){
        var first = $('#first');
        $('#paginationContainer div a').each(function(){
                //console.log(this.classList);
                var x = $(this);
                if(x.hasClass('active')){
                    x.removeClass('active');
                }
            });
        first.addClass('active');

    }
    function getAllCities() {
        $.ajax({
            url: '/Home/getAllCities',
            type: 'GET',
            data: { },
            dataType: 'json',
            success: function (data) {
                var cities = $('#cities');

                //console.log("df");
                $.each(data, function (i, item) {
                    var li = document.createElement('li');

                    var anc = document.createElement('a');
                    anc.classList.add("dropdown-item");

                    var inp = document.createElement('input');
                    inp.type = "checkbox";
                    inp.id = item.name.replaceAll(' ', '');
                    inp.value = item.cityId;
                    inp.name = item.name;
                    inp.classList.add("me-2");


                    var lable = document.createElement('lable');
                    lable.classList.add("form-check-label");
                    lable.setAttribute("for", item.name.replaceAll(' ', ''));
                    lable.innerHTML = item.name;

                            
                    anc.appendChild(inp);
                    $(inp).after($(lable));
                    li.appendChild(anc);

                            
                    cities.append(li);
                });
                        
            }
        });
    }
</script>